CREATE TABLE `tags` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`label` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `content_types` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`label` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `users` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`email` VARCHAR(255) NOT NULL,
	`username` VARCHAR(255) NOT NULL,
	`password` VARCHAR(255) NOT NULL,
	`last_login` TIMESTAMP() NOT NULL DEFAULT CURRENT_TIME() COMMENT 'last login get current_time()',
	`rank` INTEGER() NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `files` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`title` VARCHAR(255) NOT NULL,
	`description` VARCHAR()(2000) NOT NULL,
	`size` INTEGER() NOT NULL COMMENT 'files size',
	`path` VARCHAR()(255) NOT NULL,
	`upload_date` TIMESTAMP() NOT NULL,
	`uploader_id` INTEGER() NOT NULL,
	`extension_id` INTEGER() NOT NULL,
	`type_id` INTEGER() NOT NULL COMMENT 'reference content type id',
	PRIMARY KEY(`id`)
);


CREATE TABLE `comments` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`content` VARCHAR()(2000) NOT NULL,
	`author_id` INTEGER() NOT NULL,
	`file_id` INTEGER() NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `ranks` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`label` VARCHAR(255) NOT NULL,
	`power` INTEGER() NOT NULL DEFAULT 0 COMMENT '0-10 invite
11-20 user
>50 moderator
100 admin',
	PRIMARY KEY(`id`)
);


CREATE TABLE `rights` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`label` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `friends` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`user_id` INTEGER() NOT NULL,
	`friend_id` INTEGER() NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `extension` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`label` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `file_tags` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`file_id` INTEGER() NOT NULL,
	`tag_id` INTEGER() NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `alloted_rights` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`rank_id` INTEGER() NOT NULL,
	`right_id` INTEGER() NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `liked_content` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`user_id` INTEGER() NOT NULL,
	`file_id` INTEGER() NOT NULL,
	PRIMARY KEY(`id`)
) COMMENT='Count like on given file id';


CREATE TABLE `bookmarks` (
	`id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`user_id` INTEGER() NOT NULL,
	`file_id` INTEGER() NOT NULL,
	PRIMARY KEY(`id`)
);


ALTER TABLE `friends`
ADD FOREIGN KEY(`user_id`) REFERENCES `users`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `friends`
ADD FOREIGN KEY(`friend_id`) REFERENCES `users`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `files`
ADD FOREIGN KEY(`uploader_id`) REFERENCES `users`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `files`
ADD FOREIGN KEY(`extension_id`) REFERENCES `extension`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `comments`
ADD FOREIGN KEY(`author_id`) REFERENCES `users`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `comments`
ADD FOREIGN KEY(`file_id`) REFERENCES `files`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `files`
ADD FOREIGN KEY(`type_id`) REFERENCES `content_types`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `file_tags`
ADD FOREIGN KEY(`file_id`) REFERENCES `files`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `file_tags`
ADD FOREIGN KEY(`tag_id`) REFERENCES `tags`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `ranks`
ADD FOREIGN KEY(`id`) REFERENCES `users`(`rank`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `alloted_rights`
ADD FOREIGN KEY(`rank_id`) REFERENCES `ranks`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `alloted_rights`
ADD FOREIGN KEY(`right_id`) REFERENCES `rights`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `bookmarks`
ADD FOREIGN KEY(`user_id`) REFERENCES `users`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `bookmarks`
ADD FOREIGN KEY(`file_id`) REFERENCES `files`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `liked_content`
ADD FOREIGN KEY(`file_id`) REFERENCES `files`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `liked_content`
ADD FOREIGN KEY(`user_id`) REFERENCES `users`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;